// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Throttle throttle
//
// swagger:model Throttle
type Throttle struct {

	// バースト上限（バーストとして許容されるリクエスト数）
	// Required: true
	BurstLimit *int64 `json:"burstLimit"`

	// レート上限（1秒あたりのリクエスト数の平均）
	// Required: true
	RateLimit *float64 `json:"rateLimit"`
}

// Validate validates this throttle
func (m *Throttle) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBurstLimit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRateLimit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Throttle) validateBurstLimit(formats strfmt.Registry) error {

	if err := validate.Required("burstLimit", "body", m.BurstLimit); err != nil {
		return err
	}

	return nil
}

func (m *Throttle) validateRateLimit(formats strfmt.Registry) error {

	if err := validate.Required("rateLimit", "body", m.RateLimit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Throttle) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Throttle) UnmarshalBinary(b []byte) error {
	var res Throttle
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
